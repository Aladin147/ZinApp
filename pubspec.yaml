name: zinapp_v2
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2 # Ensure this matches your Flutter SDK version or is compatible

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8 # Keep or update as needed

  # Core Dependencies for V2
  flutter_riverpod: ^2.5.1 # State management (check for latest version)
  riverpod: ^2.5.1 # Base Riverpod package
  riverpod_annotation: ^2.3.5 # Code generation for Riverpod (check for latest)
  # Removed provider package as part of migration to Riverpod
  go_router: ^14.8.1 # Routing (Using suggested version)
  http: ^1.2.2 # HTTP client (check for latest version)
  flutter_secure_storage: ^9.2.2 # Secure storage for auth tokens
  shared_preferences: ^2.2.2 # Local storage for app preferences
  json_annotation: ^4.8.1 # JSON serialization
  equatable: ^2.0.5 # Value equality
  flutter_svg: ^2.0.10+1 # SVG rendering (check for latest version)
  google_fonts: ^6.1.0 # Google Fonts for typography
  cached_network_image: ^3.3.1 # Image caching
  shimmer: ^3.0.0 # Loading effects
  lottie: ^3.0.0 # Lottie animations
  intl: ^0.19.0 # Internationalization
  dio: ^5.5.0+1 # HTTP client for API calls


dev_dependencies:
  flutter_test:
    sdk: flutter
  mockito: ^5.4.4 # Or latest compatible version for mocking
  # build_runner: ^2.4.11 # Removed duplicate entry

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0 # Use the version specified in V2_DEV_SETUP.md or latest

  # Build runner dependencies for code generation
  build_runner: ^2.4.11 # Check for latest version
  riverpod_generator: ^2.4.1 # Check for latest version
  json_serializable: ^6.7.1 # JSON serialization code generation

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/mock_data/ # Declare mock data directory
    - assets/logos/svg/ # Logo SVG files
    - assets/logos/png/ # Logo PNG files
    - assets/badges/svg/ # Badge SVG files
    - assets/badges/png/ # Badge PNG files
    - assets/icons/svg/ # Icon SVG files
    - assets/icons/png/ # Icon PNG files
    - assets/illustrations/ # Illustrations
    - assets/images/avatars/ # User and stylist avatars
    - assets/images/posts/ # Post images

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Urbanist
  #     fonts:
  #       - asset: assets/fonts/Urbanist/static/Urbanist-Regular.ttf
  #         weight: 400
  #       - asset: assets/fonts/Urbanist/static/Urbanist-SemiBold.ttf
  #         weight: 600
  #       - asset: assets/fonts/Urbanist/static/Urbanist-ExtraBold.ttf
  #         weight: 800
  #   - family: Trajan Pro # Example of another font family
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
