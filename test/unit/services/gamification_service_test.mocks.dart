// Mocks generated by Mockito 5.4.5 from annotations
// in zinapp_v2/test/unit/services/gamification_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:zinapp_v2/models/token_transaction.dart' as _i6;
import 'package:zinapp_v2/models/user_profile.dart' as _i2;
import 'package:zinapp_v2/services/user_profile_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfile_0 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProfileService extends _i1.Mock
    implements _i3.UserProfileService {
  MockUserProfileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  _i5.Future<_i2.UserProfile> getUserProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, [userId]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#getUserProfile, [userId]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> updateUserProfile(
    String? userId,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [userId, updates]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#updateUserProfile, [userId, updates]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> addXp(
    String? userId,
    int? amount,
    String? reason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addXp, [userId, amount, reason]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#addXp, [userId, amount, reason]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> updateTokens(
    String? userId,
    int? amount,
    _i6.TokenTransactionType? type,
    String? description, {
    String? relatedEntityId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateTokens,
              [userId, amount, type, description],
              {#relatedEntityId: relatedEntityId},
            ),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(
                  #updateTokens,
                  [userId, amount, type, description],
                  {#relatedEntityId: relatedEntityId},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> unlockAchievement(
    String? userId,
    String? achievementId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#unlockAchievement, [userId, achievementId]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#unlockAchievement, [userId, achievementId]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<List<_i6.TokenTransaction>> getTokenHistory(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getTokenHistory, [userId]),
            returnValue: _i5.Future<List<_i6.TokenTransaction>>.value(
              <_i6.TokenTransaction>[],
            ),
          )
          as _i5.Future<List<_i6.TokenTransaction>>);
}
